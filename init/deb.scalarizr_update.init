#!/bin/bash
#
# scalarizr - Scalarizr update tool
#
### BEGIN INIT INFO
# Provides:          scalarizr_update
# Required-Start:    $network $local_fs
# Required-Stop:
# Should-Start:      $named
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Scalarizr update tool
# Description:       Scalarizr is a part of Scalr project
### END INIT INFO

update_flag=/etc/scalr/private.d/.update

case "$1" in
        start)
				exec 2>&1
				exec 1>/var/log/scalarizr_update.log
				
                echo 'Updating scalarizr...'
                
                echo 'Checking network'
                url=$(cat /etc/apt/sources.list.d/scalr.list | grep deb | head -1 | cut -d ' ' -f 2)
                python -c "
import time
import urlparse
import socket
host = urlparse.urlparse('$url')[1]
while True:
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect((host, 80))
        break
    except:
        time.sleep(1)                
"
                
                echo 'Executing package manager'
                apt-get update
				export DEBIAN_FRONTEND=noninteractive
				export DEBIAN_PRIORITY=critical
				platform=`echo -e "import re;\nwith open('/etc/scalr/public.d/config.ini') as f: print re.search('platform\s*=\s*(\w+)', f.read()).group(1)" | python`
				apt-get install -y scalarizr scalarizr-${platform} && touch $update_flag
                ;;
                
        stop)
				;;

        status)
                if [ -f $update_flag ]; then
                        last_update=$(date -r $update_flag)
                else
                        last_update="never"
                fi
                [ -x /usr/local/bin/scalarizr ] && /usr/local/bin/scalarizr -v
                echo "Last update:  $last_update"
                ;;

        *)
                echo "Usage: $0 {start|status}"
                ;;
esac
