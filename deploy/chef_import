#!/bin/bash

LOG=/var/log/role-builder.log
SCALR_IMPORT_STRING=%s
CHEF_RUNLIST="{ \"scalarizr\": { \"behaviour\": [\"mysql\", \"app\"]}, \"run_list\": [ \"recipe[nginx]\", \"recipe[mysql::server]\", \"recipe[scalarizr]\" ] }"

do_log () {
	_col=$(stty -a | grep columns | awk '{print $7}' | sed 's/;//')
	echo -ne $2
	len=${#2}
	eval $1 >> $LOG 2>&1
	
	if [ "$?" -ne 0 ]; then
		printf "%$[_col-20-len]s [ \e[1;31mFailed\e[0m ]\r\nSee $LOG fore more info.\r\n"
		exit 1
	else
		printf "%$[_col-20-len]s [ \e[1;32mOK\e[0m ]\r\n"
	fi
	
	echo -e '\r\n\r\n' >> $LOG
}

rhel=$(python -c "import platform; d = platform.dist(); print int(d[0].lower() in ['centos', 'rhel', 'redhat'] and d[1].split('.')[0])")
fedora=$(python -c "import platform; d = platform.dist(); print int((d[0].lower() == 'fedora' or (d[0].lower() == 'redhat' and d[2].lower() == 'werewolf')) a
nd d[1].split('.')[0])")

if [ "$rhel" -eq 0 ] && [ "$fedora" -eq 0 ]; then
	do_log "sudo apt-get update && sudo apt-get -y install ruby ruby1.8-dev libopenssl-ruby rdoc ri irb build-essential wget ssl-cert" \
			"Installing essential packages (ruby, build-essential, etc)"
else
	do_log "sudo rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm" "Installing EPEL repository"
	do_log "sudo rpm -Uvh http://download.elff.bravenet.com/5/i386/elff-release-5-3.noarch.rpm" "Installing ELFF repository"
	do_log "sudo yum -y install ruby ruby-shadow ruby-ri ruby-rdoc gcc gcc-c++ ruby-devel ruby-static" "Installing ruby"
fi

cd /tmp
do_log "wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz" "Downloading rubygems"
do_log "tar zxf rubygems-1.3.7.tgz" "Unpacking rubygems"
cd rubygems-1.3.7
do_log "ruby setup.rb --no-format-executable" "Installing rubygems"
do_log "gem install chef --no-ri --no-rdoc" "Installing chef"
mkdir -p /tmp/chef-solo
do_log 'echo -e "file_cache_path \"/tmp/chef-solo\"\r\ncookbook_path \"/tmp/chef-solo\"" | tee /etc/solo.rb' "Creating chef configuration file"
cd /tmp/chef-solo
do_log "wget http://ge.tt/67CQ4JJ/recipes.tar.gz" "Downloading essential cookbooks"
do_log "tar zxvf recipes.tar.gz && rm -f recipes.tar.gz" "Unpacking cookbooks"
do_log 'echo -e $CHEF_RUNLIST | tee /tmp/soft.json' "Creating runlist"
do_log "chef-solo -c /etc/solo.rb -j /tmp/soft.json" "Installing software. It can take a while"
do_log "$SCALR_IMPORT_STRING &" "Starting importing to Scalr in background"
echo "Scalarizr's log:"
tail -f /var/log/scalarizr.log | while read LINE; do
        [[ "${LINE}" =~ 'Rebundle complete!' ]] && break
        echo $LINE
done
echo "Done!"
exit 0
