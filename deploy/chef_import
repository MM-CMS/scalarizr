#!/bin/bash

LOG=/var/log/role-builder.log
SCALR_IMPORT_STRING=%s
CHEF_RUNLIST="{ \"scalarizr\": { \"behaviour\": [\"mysql\", \"app\"]}, \"run_list\": [ \"recipe[nginx]\", \"recipe[mysql::server]\", \"recipe[scalarizr]\", \"recipe[apache2]\" ] }"

exec 2>$LOG

do_log () {
	_col=$(stty -a | grep columns | awk '{print $7}' | sed 's/;//')
	MSG=$1
	echo -ne "$MSG"
	shift
	echo "$*"
	len=${#@}
	"$@" >> $LOG 2>&1
	
	if [ "$?" -ne 0 ]; then
		printf "%$[_col-20-len]s [ \e[1;31mFailed\e[0m ]\r\nSee $LOG fore more info.\r\n"
		exit 1
	else
		printf "%$[_col-20-len]s [ \e[1;32mOK\e[0m ]\r\n"
	fi
	
	echo -e '\r\n\r\n' >> $LOG
}


rhel=$(python -c "import platform; d = platform.dist(); print int(d[0].lower() in ['centos', 'rhel', 'redhat'] and d[1].split('.')[0])")
fedora=$(python -c "import platform; d = platform.dist(); print int((d[0].lower() == 'fedora' or (d[0].lower() == 'redhat' and d[2].lower() == 'werewolf')) and d[1].split('.')[0])")

if [ "$rhel" -eq 0 ] && [ "$fedora" -eq 0 ]; then
	sudo apt-get update >> $LOG 2>$1
	do_log "TEST" echo -e "123123123" | echo
	do_log "Installing essential packages" sudo apt-get -y install ruby ruby1.8-dev libopenssl-ruby rdoc ri irb build-essential wget tar ssl-cert			
else
	do_log "Installing EPEL repository" sudo rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm
	do_log "Installing ELFF repository" sudo rpm -Uvh http://download.elff.bravenet.com/5/i386/elff-release-5-3.noarch.rpm
	do_log "Installing essential packages" sudo yum -y install ruby ruby-shadow ruby-ri ruby-rdoc gcc gcc-c++ ruby-devel ruby-static wget tar
fi


cd /tmp

do_log 'Downloading rubygems' wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz
do_log 'Unpacking rubygems' tar zxf rubygems-1.3.7.tgz
cd rubygems-1.3.7
do_log "Installing rubygems" ruby setup.rb --no-format-executable
do_log "Installing chef" gem install chef --no-ri --no-rdoc
mkdir -p /tmp/chef-solo
do_log "Creating chef configuration file" echo -e 'file_cache_path "/tmp/chef-solo"\r\ncookbook_path "/tmp/chef-solo"' | tee /etc/solo.rb
cd /tmp/chef-solo
do_log "Downloading essential cookbooks" wget http://ge.tt/67CQ4JJ/recipes.tar.gz
do_log "Unpacking cookbooks" tar zxvf recipes.tar.gz && rm -f recipes.tar.gz
do_log "Creating runlist" echo -e $CHEF_RUNLIST | tee /tmp/soft.json
do_log "Installing software. It can take a while" chef-solo -c /etc/solo.rb -j /tmp/soft.json
do_log "Starting importing to Scalr in background" $SCALR_IMPORT_STRING &
echo "Scalarizr's log:"
tail -f /var/log/scalarizr.log | while read LINE; do
        [[ "${LINE}" =~ 'Rebundle complete!' ]] && break
        echo $LINE
done
echo "Done!"
exit 0
