#!/bin/bash
#
# scalarizr_update - Scalarizr update on OS boot
#
### BEGIN INIT INFO
# Provides:          scalarizr_update
# Required-Start:    $network $local_fs
# Required-Stop:
# Should-Start:      $named
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Scalarizr update on OS boot
# Description:       Scalarizr is a part of Scalr project
### END INIT INFO


. /lib/lsb/init-functions

SCALARIZR_INI='/etc/scalr/public.d/config.ini'
PYTHON='/usr/bin/python'
NAME='scalarizr_update'
PACKAGE_MGR_CLASS='AptPackageMgr'


upd_scalarizr_option() {
	$PYTHON -c "
import ConfigParser
p = ConfigParser.ConfigParser()
p.read('$SCALARIZR_INI')
print p.get('general', '$1')
"
}

upd_wait_network() {
	log_success_msg 'checking network'
	$PYTHON -c "
import time
import socket
import sys
for _ in range(0, 30):
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.connect(('apt.scalr.net', 80))
        break
    except:
        time.sleep(1)
else:
    print 'error: Network unreachable'
    sys.exit(1)
"
}

upd_update_scalarizr() {
	log_success_msg 'checking scalarizr updates'
	PACKAGE="scalarizr-"$(upd_scalarizr_option 'platform')
	$PYTHON -c "
from upd.client.package_mgr import $PACKAGE_MGR_CLASS
mgr = $PACKAGE_MGR_CLASS()
try:
	mgr.updatedb()
except AttributeError:
	pass
versions = mgr.candidates('$PACKAGE')
if versions:
	print 'Installing $PACKAGE=%s' % versions[-1]
	mgr.install('scalarizr-base', versions[-1], '$PACKAGE', versions[-1])
versions = mgr.candidates('scalr-upd-client')
if versions:
	print 'Installing scalr-upd-client=%s' % versions[-1]
	mgr.install('scalr-upd-client', versions[-1])
"

}



case "$1" in
        start)
				if [ -f $SCALARIZR_INI ]; then
					upd_wait_network
					upd_update_scalarizr
				else
					log_failure_msg "scalarizr config not found: $SCALARIZR_INI"
					exit 1
				fi
                ;;

		reload)
				;;
             
		restart)
				;;
				
		condrestart)
				;;
   
        stop)
				;;

        status)
                ;;

        *)
                echo "Usage: $0 {start|stop|restart|condrestart|reload|status}"
                ;;
esac


