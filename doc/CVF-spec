Configuration Validation Framework
==================================


Структура ini файлов
-------------------

Конфигурация скаларизера хранится в нескольких файлах. 
Главный файл конфигурации `etc/public.d/config.ini`
В нем несколько важных опций:
 * `general/platform` - Клауд платформа, например `ec2`. Строка
 * `general/behaviour` - Поведение роли, `app,mysql`. Список 
 * Секция `handlers` - Каждая опиция указывает модуль, который можно загрузить. 
 Пример:
 [handlers]
 hooks=scalarizr.handlers.hooks
 script_executor=scalarizr.handlers.script_executor
 
Для платформы, для каждого поведения и для каждого модуля из секции `handlers` может быть свой файл конфигурации,
Например ec2.ini, app.ini, hooks.ini. 
Скаларизер последовательно ищет и подгружает подключаемые файлы в следующем порядке
 # ini файл платформы
 # ini файлы поведений
 # ini файлы модулей. 

Пример:
config.ini
[general]
...
platform = ec2
behaviour = mysql,app
...
[handlers]
hooks = scalarizr.handlers.hooks
script_executor = scalarizr.handlers.script_executor

ec2.ini
[handlers]
ec2_lifecycle = scalarizr.handlers.ec2.lifecycle

mysql.ini
[mysql]
mysqld_path = /usr/libexec/mysqld
mysql_path = /usr/bin/mysql
mycnf_path = /etc/my.cnf

[handlers]
mysql = scalarizr.handlers.mysql
mysql_ebs = scalarizr.handlers.mysql.ec2.ebs_storage

app.ini
[handlers]
apache = scalarizr.handlers.apache

hooks.ini
[hooks]
hooks_path=/usr/local/scalarizr/hooks

mysql_ebs.ini
[mysql_ebs]
volume_size = 15G
filesystem = ext4

Будут загружены следующие файлы:
 # ec2.ini
 # mysql.ini, app.ini
 # hooks.ini, mysql_ebs.ini



Приватная и публичная конфигурация
----------------------------------

Скаларизер спроектирован работать в клауд окружении. 
В любой момент с сервера может быть сделан снепшот, который будет использован для создания нового сервера в Скаларе.
Снепшот должен быть обезличенным, т.е не нести в себе логи сервера с которого он сделан, авторизованных ssh ключей, 
и прочей конфеденциальной информации. 
В EC2, например можно расшаривать доступ к своим снепшотам, и тогда последний пункт становится очень актуальным

Поэтому в скаларизере каждый файл конфигурации состоит из двух частей: публичной, которая попадает в снепшот 
и приватной, которая не попадает. Публичная находится в файле etc/public.d/<config>.ini, 
приватная - в файле etc/private.d/<config>.ini 

Когда скаларизеру необходимо загрузить файл <config>.ini он сначала ищет в etc/public.d и загружает файл, если находит,
затем в etc/private.d. Конфигурации объединяются, но у приватной есть возможность переопределить опции публичной.

Например:
<code python>
cnf.load_ini('ec2.ini')
	# Загрузить 'private.d/ec2.ini'
	# Загрузить 'public.d/ec2.ini'
	pass
</code>

Когда Скалр требует сделать снепшот сервера, 
то Скаларизер отправляет в снепшот etc/public.d полностью игнорируя etc/private.d
Новый сервер, при инициализации создаст свою etc/private.d диреторию.


Способы задания конфигурации
----------------------------

Конфигурация скаларизера задается из 3-х мест:
 # ini файлы
 # опции командной строки 
 # user-data

Конфигурирование через командную строку выглядит так:
	-o <section>.<option>=<value>
Есть пара упрощений:
 * Можно опустить секцию general. Например вместо `-o general.platform=<pl>` можно написать `-o platform=<pl>`
 * Символы подчеркивания `_` в именах секций и опций можно заменять дефисом `-`. 
   Например вместо `-o mysql.mycnf_path=<path>` можно написать `mysql.mycnf-path=<path>`  


user-data, это набор данных передаваемых Скалром запускаемому инстансу, среди них могут быть данные, которыми модули 
захотят переопределить опции конфигурации. 
Так `server_id`, `queryenv_url`, `p2p_messaging.producer_url` берутся из user-data.
Механизм доставки user-data зависит от клауд платформы. модулям Скаларизера же она доступна через модуль `scalarizr.platform`

Приоритеты способов задания
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Опции командной строки имеют приоритет над ini файлами, т.е если в config.ini queryenv_url=http://scalr.net/environment.php
а в команде запуска -o queryenv-url=http://173.205.188.130:8773/services/QueryEnv сработает последнее
Однако опции никак не могут повлиять на набор подгружаемых файлов, т.к. они применяются к конфигурации после загрузки ini файлов
Т.е. изменить `platform`, `behaviour` и набор подгружаемых модулей нельзя.

user-data применяется единожды при загрузке скаларизера и перезаписывает ini файлы. 

INI files
User data (once)
Command-line options


Код загрузки конфигурации Скаларизером
----------------------------------

Упрощенный код загрузки конфигурации

<code python>
	etc_path = None
	# Определить etc директорию (-c Command-line option)
	# ...
	
	cnf = ScalarizrCnf(etc_path)
	# Загрузить ini файлы
	cnf.bootstrap()
	
	# При первом запуске применить user-data
	if cnf.state == ScalarizrState.BOOTSTRAPPING:
		cnf.fire('apply_user_data', cnf) 
	
	# Применить конфигурацию из командной строки
	cnf.update(cli_cnf) # -o key=value
	
	# Провалидировать конфигурацию
	report = cnf.validate()
</code>


Конфигурирование. Запуск с ключем -n
------------------------------------

Ключ -n, --configure позволяет сконфигурировать скаларизер и записать изменения в ini файлы.
.. TODO


Вариант структуры директорий
----------------------------
/etc/scalr
	public/
		keys/
		modules/
			nginx/
				app-servers.tpl
			ec2.ini
			rackspace.ini
			www.ini
		config.ini
		logging.ini
	private/
		keys/
		hosts/
		vhosts/
		modules/
			ec2.ini
		config.ini
	