
== Если в одном из хандлеров вылетело исключение, об этом не может узнать другой хандлер и выполнить действия ==

Sample:
	CloudController.on_host_init_response
		создается EBS
	CloudFoundry.on_before_host_up
		запускаются сервисы
		raise Exception()
	
	В CloudController нет возможности среагировать и удалить EBS
	
	
== Последовательность выполнения хандлеров и слушателей ==

Sample:
	На before_host_up в iptables добавляются правила для доверенных хостов
	На этоже событие запускаются сервисы, которые могут открывать соединения друг к другу и падать, 
		если порты еще не открыты


== HostInit -> HostUp ==

Одна фаза на весь процесс конфигурирования сервера - это очень мало. Нужно иметь возможность манипулировать конфигурацией как цепочкой(графом) объектов (ex: puppet, chef)
и иметь возможность легко вставлять новые объекты в любое место цепочки

Сейчас:
	-> HostInitResponse
		F: host_init_response
			- configure EBS mountpoints
			- save HostInitResponse data 
	<- BeforeHostUp
	-> BeforeHostUp
		F: before_host_up
			- init MySQL master
	<- HostUp
		F: host_up
	-> HostUp

<- -> это сообщения между Скалром и Скаларизером. Входящие сообщения может обработать любой объект-обработчик (Handler).
F: внутренние события скаларизера, на которые может подписаться любой объект


Должно быть:
	- notify HostInit
	- ebs (vol-123456ee, /dev/sdg, /mnt/storage)
	- mysql-master (ebs: vol-8754233)
	- ebs (vol-543454dd, /dev/sdf, /mnt/storage/tmp)
	- notify HostUp