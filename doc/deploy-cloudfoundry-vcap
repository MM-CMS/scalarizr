#!/bin/bash

read -p "Enter behaviour string: " BEHAVIOUR

pushd .
cd /root
wget https://raw.github.com/cloudfoundry/vcap/master/setup/install
bash install
rm -f install
. "/usr/local/rvm/scripts/rvm"
echo '. "/usr/local/rvm/scripts/rvm"' >> .bashrc
yes | cd /root/cloudfoundry/vcap



cd cloudfoundry/vcap
rake bundler:install:production


git checkout 8f37ade2bdb799b561a4409eef518667fce69b00

pushd .
cd cloud_controller/config
cat <<EOF > cloud_controller.yml.patch
26c26
<   allow_external: false
---
>   allow_external: true
42,43c42,43
<   level: debug
< # file:
---
>   level: info
>   file: /var/vcap/sys/log/cloud_controller.log
47,48c47,48
<   level: debug
< # file:
---
>   level: info
>   file: /var/vcap/sys/log/cloud_controller.log
58a59,60
>   staging_manifests: /root/cloudfoundry/vcap/staging/lib/vcap/staging/plugin/manifests
>   staging_cache:  /var/vcap.local/staging
65,66c67,71
< pid: /var/vcap/sys/run/cloudcontroller.pid
< rails_environment: development
---
> 
> pid: /var/vcap/sys/run/cloud_controller.pid
> log_file: /var/vcap/sys/log/cloud_controller.log
> 
> rails_environment: production
69,71c74,75
<     database: cloudcontroller
<     host: localhost
<     port: 5432
---
>     adapter: sqlite3
>     database: /var/vcap/data/cloud_controller/db/cloud_controller.sqlite3
73,77c77,87
<     username: postgres
<     password: postgres
<     adapter: postgresql
<     timeout: 2000
<     template: template0 # Required for utf8 encoding
---
> 
>   #production:
>   #  database: cloudcontroller
>   #  host: localhost
>   #  port: 5432
>   #  encoding: utf8
>   #  username: postgres
>   #  password: postgres
>   #  adapter: postgresql
>   #  timeout: 2000
>   #  template: template0 # Required for utf8 encoding
EOF
patch cloud_controller.yml cloud_controller.yml.patch
popd


pushd .
cd dea/config
cat <<EOF > dea.yml.patch
20c20,21
<   level: debug
---
>   level: info
>   file: /var/vcap/sys/log/dea.log
34a36
> log_file: /var/vcap/sys/log/dea.log
EOF
patch dea.yml dea.yml.patch
popd


pushd .
cd health_manager/config
cat <<EOF > health_manager.yml.patch
11,12c11,14
<   level: debug
< pid: /var/vcap/sys/run/healthmanager.pid
---
>   level: info
>   file: /var/vcap/sys/log/health_manager.log
> pid: /var/vcap/sys/run/health_manager.pid
> log_file: /var/vcap/sys/log/health_manager.log
17,19c19,20
<     database: cloudcontroller
<     host: localhost
<     port: 5432
---
>     adapter: sqlite3
>     database: /var/vcap/data/cloud_controller/db/cloud_controller.sqlite3
21,25c22,32
<     username: postgres
<     password: postgres
<     adapter: postgresql
<     timeout: 2000
<     template: template0 # Required for utf8 encoding
---
> 
>   #production:
>   #  database: cloudcontroller
>   #  host: localhost
>   #  port: 5432
>   #  encoding: utf8
>   #  username: postgres
>   #  password: postgres
>   #  adapter: postgresql
>   #  timeout: 2000
>   #  template: template0 # Required for utf8 encoding
EOF
patch health_manager.yml health_manager.yml.patch
popd

pushd .
cd router/config
cat <<EOF > router.yml.patch
9a10
>   file: /var/vcap/sys/log/router.log
10a12
> log_file: /var/vcap/sys/log/router.log
EOF
patch router.yml.yml router.yml.patch
popd

git checkout HEAD^

mkdir -p /var/vcap/data/cloud_controller/db
update-rc.d nginx disable
update-rc.d mysql disable
update-rc.d rabbitmq-server disable


# Install scalarizr
wget http://apt.scalr.net/scalr-repository_0.3_all.deb
dpkg -i scalr-repository_0.3_all.deb
rm -f scalr-repository_0.3_all.deb

apt-get update
apt-get install scalarizr scalarizr-ec2

sed -i 's/behaviour.*/behaviour = '$BEHAVIOUR'/g' /etc/scalr/public.d/config.ini
sed -i 's/disable_root.*/disable_root: 0/g' /etc/cloud/cloud.cfg



# Cleanup
apt-get clean
apt-get autoclean		
rm -rf /root/.bash_history /root/.viminfo /root/.ssh/*
rm -rf /home/ubuntu/.bash_history /home/ubuntu/.viminfo /home/ubuntu/.ssh/*
find /var/log -type f | while read line; do cat /dev/null > "$line"; done
rm -f deploy-cloudfoundry-vcap
history -c


popd
