[general]
; Unique server identificator in Scalr envirounment
server_id = 

; Server behaviour (app|www|mysql) 
behaviour = 

; Path to locale sqlite database
storage_path = private.d/db.sqlite3

; Path to scalarizr crypto key
crypto_key_path = private.d/keys/default

; Platform on which scalarizr is deployed 
;   ec2     - Amazon EC2, 
;   rs      - RackSpace cloud servers
;   vps     - Standalone VPS server 
platform = ec2

; URL to Scalr QueryEnv service. 
; https://scalr.net/queryenv - for Scalr.net SaaS
queryenv_url = https://scalr.net/queryenv

; Path to scalarizr scripts
scripts_path = /usr/local/scalarizr/scripts

[messaging]
; Messaging implementation adapter.
;   p2p     - Default and currently only supported
adapter = p2p

[messaging_p2p]

; Scalr messaging endpoint
; https://scalr.net/messaging - for Scalr.net SaaS
producer_endpoint = https://scalr.net/messaging

; Local messaging endpoint. Scalr will send messages here
consumer_endpoint = http://localhost:8013

[handlers]
; Life circle
; @required
; Server life circle in a Scalr envirounment
lifecircle = scalarizr.handlers.lifecircle

; IP list builder
; @optional
; Builds farm servers ip addresses structure
; @see http://article-about-etc-aws-hosts structure
ip_list_builder = scalarizr.handlers.ip_list_builder

; Scalr scripting
; @optional
; Executes user defined scripts on scalr and scalarizr events
; @see http://article-about-scripting
script_executor = scalarizr.handlers.script_executor

; Hooks
; @optional
; @requires scalarizr.handlers.script_executor
; Executes scripts on scalarizr events in a POSIX manner. Scripts are located in `hooks` directory, 
; must be named exactly as a scalarizr event with a numeric prefix which defines the execution order,
; and must have #! in a first line.
hooks = scalarizr.handlers.hooks


